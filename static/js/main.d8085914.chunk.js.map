{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","map","good","App","useState","reversed","setReversed","NONE","sorted","setSort","className","type","cn","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EAAiBC,EAAoBC,GAErC,IAAMC,EAAY,YAAOH,GA2BzB,OAzBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAIL,IAAaJ,EAASU,SACjBF,EAAMG,cAAcF,GAGzBL,IAAaJ,EAASY,OACjBJ,EAAMK,OAASJ,EAAMI,OAGvB,KAGLR,GACFC,EAAaQ,UAGOR,EAAaS,KAAI,SAACC,GAAD,OACrC,oBACE,UAAQ,OADV,SAIGA,GAFIA,O,SA9BNhB,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMiB,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA0BF,mBAASlB,EAASqB,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KAeA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYJ,IAAWtB,EAASU,WAEpCiB,QAnBmB,WACzBJ,EAAQvB,EAASU,WAWb,iCAYA,wBACEe,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYJ,IAAWtB,EAASY,SAEpCe,QAnCa,WACnBJ,EAAQvB,EAASY,SA2Bb,4BAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaP,IAEjBQ,QArDQ,WACdP,GAAY,SAAAQ,GAAO,OAAKA,MA6CpB,sBAaGT,GAAYG,IAAWtB,EAASqB,OAE/B,wBACEI,KAAK,SACLD,UAAU,4BACVG,QAlDE,WACZP,GAAY,GACZG,EAAQvB,EAASqB,OA6CT,sBAWN,6BACE,6BACGnB,EAAkBD,EAAiBqB,EAAQH,WCnItDU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8085914.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[], sortType: SortType, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    if (sortType === SortType.ALPHABET) {\n      return good1.localeCompare(good2);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return good1.length - good2.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const renderedGoods = visibleGoods.map((good) => (\n    <li\n      data-cy=\"Good\"\n      key={good}\n    >\n      {good}\n    </li>\n  ));\n\n  return renderedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reversed, setReversed] = useState(false);\n\n  const reverse = () => {\n    setReversed(current => !current);\n  };\n\n  const [sorted, setSort] = useState(SortType.NONE);\n\n  const sortByLength = () => {\n    setSort(SortType.LENGTH);\n  };\n\n  const sortAlphabetically = () => {\n    setSort(SortType.ALPHABET);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSort(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sorted !== SortType.ALPHABET },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sorted !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': !reversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (reversed || sorted !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, sorted, reversed)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}